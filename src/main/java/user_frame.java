


import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;

public class user_frame extends javax.swing.JFrame {

    private String UID;

    /**
     * Creates new form user_frame
     */
    public user_frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jButton2.setBackground(new java.awt.Color(0, 102, 102));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("issued books");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 102, 102));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Returned history");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(216, 216, 216))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("USERNAME");

        jButton1.setBackground(new java.awt.Color(0, 102, 102));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("view books");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(210, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
      JFrame viewBooksUserFrame = new JFrame("Books Available");
            
try{
     try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","root");
            Statement stmt = con.createStatement();
             String sql = "select* from books";
            ResultSet rs = stmt.executeQuery(sql);
            
            JTable book_list = new JTable();
            String[] bookColumnNames = new String[]{"Book ID", "Book Name", "Book Publisher", "Book Edition", "Book Genre", "Book price", "Book Pages"};
            DefaultTableModel bookModel = new DefaultTableModel();
            bookModel.setColumnIdentifiers(bookColumnNames);
            book_list.setModel(bookModel);
            book_list.setBackground(new Color(51, 35, 85));
            book_list.setForeground(Color.white);
            book_list.setAutoResizeMode(4);
            book_list.setFillsViewportHeight(true);
            book_list.setFocusable(false);
            JScrollPane scrollBook = new JScrollPane(book_list);
            scrollBook.setHorizontalScrollBarPolicy(30);
            scrollBook.setVerticalScrollBarPolicy(20);

            while(rs.next()) {
                int bid = rs.getInt(1);
             
                String book_name = rs.getString(2);
                String book_publisher = rs.getString(3);
                String book_edition = rs.getString(4);
                String book_genre = rs.getString(5);
                String book_price = rs.getString(6);
                String book_pages = rs.getString(7);
                bookModel.addRow(new Object[]{bid, book_name, book_publisher, book_edition, book_genre, book_price, book_pages});
            }

            viewBooksUserFrame.add(scrollBook);
            viewBooksUserFrame.setSize(800, 400);
            viewBooksUserFrame.setVisible(true);
        } catch (Exception var19) {
            JOptionPane.showMessageDialog((Component)null, var19);
        }
     
    }                                        

    catch (Exception ex){
        JOptionPane.showMessageDialog(null, "uid is already excisted ");
    }
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                                               
    JFrame viewUserIssuedBooksFrame = new JFrame("My Issued Books");
    String username=jTextField1.getText();
    //Storing userid
    int UID=0;
    //Connection to database
    try {
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","root");
        Statement stmt = con.createStatement();
        
        // Retrieve uid from the database table of users
        String uidQuery = "SELECT uid FROM users WHERE username='"+username+"'"; 
        ResultSet uidResult = stmt.executeQuery(uidQuery);
        if (uidResult.next()) {
        UID= uidResult.getInt("uid");
        }
    
        //Database Query
        String sql = "select issued_books.iid as iid, issued_books.bid as bid, issued_books.uid as uid,"
                + "  books.book_name as book_name, books.book_publisher as book_publisher, "
                + "books.book_edition as book_edition, books.book_genre as book_genre, books.book_price as book_price,"
                + " books.book_pages as book_pages, issued_books.issued_date as issued_date, issued_books.period as period from books,"
                + "issued_books where books.bid=issued_books.bid and issued_books.uid=" + UID;
        //Creating statement
        //Executing query
        ResultSet rs = stmt.executeQuery(sql);
        //Creating Table for to data will be in table format
        JTable issued_book_list = new JTable();
        String[] issuedBookColumnNames = {"Issue ID", "Book ID", "User ID", "Book Name", "Book Publisher", "Book Edition", "Book Genre", "Book Price", "Book Pages", "Issued Date", "Period"};
        //Creating model for the table
        DefaultTableModel bookModel = new DefaultTableModel();
        //Setting up the columns names of the model
        bookModel.setColumnIdentifiers(issuedBookColumnNames);
        //Adding model to the table component
        issued_book_list.setModel(bookModel);
        //Setting background colour of the table
        issued_book_list.setBackground(new Color(51, 35, 85));
        //Setting foreground colour of the table
        issued_book_list.setForeground(Color.white);
        //Setting up table auto-resizable
        issued_book_list.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        issued_book_list.setFillsViewportHeight(true);
        issued_book_list.setFocusable(false);
        //Creating scrollbars for table
        JScrollPane scrollIssuedBook = new JScrollPane(issued_book_list);
        scrollIssuedBook.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        scrollIssuedBook.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        while (rs.next()) {
            //Fetching the data from mysql database
            int iid = rs.getInt(1);
            int bid = rs.getInt(2);
            int uid = rs.getInt(3);
            //String book_isbn = rs.getString(4);
            String book_name = rs.getString(4);
            String book_publisher = rs.getString(5);
            String book_edition = rs.getString(6);
            String book_genre = rs.getString(7);
            int book_price = rs.getInt(8);
            int book_pages = rs.getInt(9);
            String issued_date = rs.getString(10);
            int period = rs.getInt(11);
            //Adding fetched data in model
            bookModel.addRow(new Object[]{iid, bid, uid, book_name, book_publisher, book_edition, book_genre, book_price, book_pages, issued_date, period});
        }
        //Adding scrollbars.
        viewUserIssuedBooksFrame.add(scrollIssuedBook);
        //Setting up the dimensions of the frame.
        viewUserIssuedBooksFrame.setSize(1200, 600);
        //Setting up the frame visible.
        viewUserIssuedBooksFrame.setVisible(true);
        //Setting up the frame non-resizable.
        viewUserIssuedBooksFrame.setResizable(false);
    } catch (SQLException e1) {
        //Creating Dialog box to show any error if occurred!
        JOptionPane.showMessageDialog(null, e1);
    }


        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        
            JFrame viewUserReturnedBooksFrame = new JFrame("My Returned Books");
            String username=jTextField1.getText();
            int UID=0;  //Storing userid
            try{
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","root");
            Statement stmt = con.createStatement();
            
            // Retrieve uid from the database table of users
            String uidQuery = "SELECT uid FROM users WHERE username='"+username+"'";
            ResultSet uidResult = stmt.executeQuery(uidQuery);
            if (uidResult.next()) {
                UID= uidResult.getInt("uid");
            }
             //Query for retrieving java library management data from database
               String sql = "select returned_books.rid as rid, returned_books.bid as bid, returned_books.uid as uid,"
                       + " books.book_name as book_name, books.book_publisher as book_publisher,"
                       + "books.book_edition as book_edition, books.book_genre as book_genre, books.book_price as book_price,"
                       + "books.book_pages as book_pages, returned_books.return_date as return_date, returned_books.fine as fine "
                       + "from books, returned_books where books.bid=returned_books.bid and returned_books.uid=" + UID;
                
                   //Executing query
                   ResultSet rs = stmt.executeQuery(sql);
                   //Creating Table for to data will be in table format
                   JTable returned_book_list = new JTable();
                   String[] returnedBookColumnNames = {"Return ID", "Book ID", "User ID", "Book Name", "Book Publisher", "Book Edition", "Book Genre", "Book Price", "Book Pages", "Returned Date", "Fine"};
                   //Creating model for the table
                   DefaultTableModel bookModel = new DefaultTableModel();
                   //Setting up the columns names of the model
                   bookModel.setColumnIdentifiers(returnedBookColumnNames);
                   //Adding model to the table component
                   returned_book_list.setModel(bookModel);
                   //Setting background colour of the table
                   returned_book_list.setBackground(new Color(51, 35, 85));
                   //Setting foreground colour of the table
                   returned_book_list.setForeground(Color.white);
                   //Setting up table auto-resizable
                   returned_book_list.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
                   returned_book_list.setFillsViewportHeight(true);
                   returned_book_list.setFocusable(false);
                   //Creating scrollbars for table
                   JScrollPane scrollIssuedBook = new JScrollPane(returned_book_list);
                   scrollIssuedBook.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
                   scrollIssuedBook.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
                   while (rs.next()) {
                       //Fetching the data from mysql database
                       int rid = rs.getInt(1);
                       int bid = rs.getInt(2);
                       int uid = rs.getInt(3);
                       //String book_isbn = rs.getString(4);
                       String book_name = rs.getString(4);
                       String book_publisher = rs.getString(5);
                       String book_edition = rs.getString(6);
                       String book_genre = rs.getString(7);
                       int book_price = rs.getInt(8);
                       int book_pages = rs.getInt(9);
                       String returned_date = rs.getString(10);
                       int fine = rs.getInt(11);
                       //Adding fetched library management data in model
                       bookModel.addRow(new Object[]{rid, bid, uid,book_name, book_publisher, book_edition, book_genre, book_price, book_pages, returned_date, fine});
                   }
                   //Adding scrollbars.
                   viewUserReturnedBooksFrame.add(scrollIssuedBook);
                   //Setting up the dimensions of the frame. Params:(width,height)
                   viewUserReturnedBooksFrame.setSize(1200, 600);
                   //Setting up the frame visible.
                   viewUserReturnedBooksFrame.setVisible(true);
                   //Setting up the frame is non-resizable.
                   viewUserReturnedBooksFrame.setResizable(false);
               } catch (Exception e1) {
                   //Creating Dialog box to show any error if occured!
                   JOptionPane.showMessageDialog(null, e1);
               }
           
            
        
              
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(user_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(user_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(user_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(user_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new user_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
